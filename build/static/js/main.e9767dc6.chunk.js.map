{"version":3,"sources":["app/hooks.ts","app/Videos/videosApi.ts","app/Videos/videosSlice.ts","app/SearchBar/SearchBar.tsx","app/SearchResults/SearchResults.tsx","app/Upload/UploadHelpers.ts","app/Upload/uploadSlice.ts","app/LoginReg/Login/loginApi.ts","app/LoginReg/Login/loginSlice.ts","app/Upload/Upload.tsx","app/Home/Home.tsx","app/OneVideo/oneVideoApi.ts","app/OneVideo/oneVideoSlice.ts","app/OneVideo/OneVideo.tsx","app/LoginReg/Login/LoginReg.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","getVideosFromAPI","Promise","resolve","axios","get","then","data","getSearchVideosFromAPI","query","getVideosFromApiAsync","createAsyncThunk","a","response","getSearchVideosFromApiAsync","videosSlice","createSlice","name","initialState","status","videos","searchClicks","reducers","setVideos","state","payload","pushSearchClick","extraReducers","builder","addCase","pending","fulfilled","action","actions","getVideos","getSearchHistory","SearchBar","useState","searchStr","setSearchStr","history","useHistory","dispatch","style","display","textAlign","onSubmit","e","preventDefault","push","encodeURIComponent","type","value","onChange","event","target","SearchResults","params","useParams","searchParams","decodeURIComponent","allVideos","searchHistory","useEffect","rows","map","video","className","padding","onClick","id","_id","src","title","author","views","b64toBlob","dataURI","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","postVideo","token","setStatus","formData","FormData","console","log","append","localStorage","username","description","fetch","thumbnailGifs","thumbnailGifsIndex","r","blob","fileReader_thumbGif","thumbnailPngs","thumbnailPngsIndex","fileReader_thumbPng","fileName","url","post","headers","res","uploadSlice","gifsVisibility","setAuthor","setTitle","setDescription","setUrl","setFilename","setGifsVisibility","setThumbnailGifsIndex","setThumbnailGifs","setThumbnailPngsIndex","setThumbnailPngs","setVideo","selectAuthor","upload","selectDescription","selectFilename","selectGifsVisiblity","selectStatus","selectThumbnailGifsIndex","selectThumbnailGifs","selectThumbnailPngsIndex","selectThumbnailPngs","selectTitle","selectUploadState","selectVideo","loginFromApi","password","errors","loggedIn","undefined","expiresAt","Date","now","document","cookie","loginFromApiAsync","loginSlice","setUsername","setPassword","setUsernameError","param","setPasswordError","setLoggedIn","setToken","selectLoginState","login","selectUsername","selectPassword","selectUsernameErrors","selectPasswordErrors","selectLoggedIn","selectToken","ffmpeg","createFFmpeg","Upload","handleFile","files","file","startsWith","videoElement","createElement","addEventListener","convertToGif","duration","URL","createObjectURL","load","fileReader","FileReader","onload","result","readAsDataURL","isLoaded","handleTestFile","fetchFile","FS","num_gifs","gifs","Array","pngs","fps_str","run","midpoint","start_int","Math","max","end_int","min","start_str","toString","gif_name","gif_0","buffer","gif_1","gif_2","gif_3","png_0","png_1","png_2","png_3","videoUploadDiv","accept","color","height","opacity","justifyContent","paddingTop","pointerEvents","Home","thumbnailPng","onMouseEnter","currentTarget","thumbnailGif","onMouseLeave","getOneVideoFromAPI","getOneVideoFromApiAsync","oneVideoSlice","getVideo","oneVideo","OneVideo","controls","paddingRight","date","toDateString","likes","Login","loginState","errorsUsername","errorsPassword","handleChange","inputName","newStr","setItem","expiresIn","App","to","exact","path","fetchCount","amount","setTimeout","incrementAsync","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","uploadReducer","videosReducer","oneVideoReducer","loginReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6UAIaA,EAAiB,kBAAMC,eACvBC,EAAkDC,I,+CCFxD,SAASC,IACZ,OAAO,IAAIC,SAA0C,SAACC,GAClDC,IAAMC,IAAI,kBAAkBC,MAAK,SAACC,GAC9BJ,EAAQI,SAKb,SAASC,EAAuBC,GACnC,OAAO,IAAIP,SAA0C,SAACC,GAClDC,IAAMC,IAAN,4BAA+BI,IAASH,MAAK,SAACC,GAC1CJ,EAAQI,SCDpB,IAUaG,EAAwBC,YACjC,0BADiD,sBAEjD,4BAAAC,EAAA,sEAC2BX,IAD3B,cACUY,EADV,yBAGWA,EAASN,MAHpB,4CAMSO,EAA8BH,YACvC,gCADuD,uCAEvD,WAAOF,GAAP,eAAAG,EAAA,sEAC2BJ,EAAuBC,GADlD,cACUI,EADV,yBAGWA,EAASN,MAHpB,2CAFuD,uDAkB9CQ,GAV0BJ,YACnC,2BADmD,sBAEnD,4BAAAC,EAAA,sEAC2BX,IAD3B,cACUY,EADV,yBAGWA,EAASN,MAHpB,4CAQuBS,YAAY,CACnCC,KAAM,SACNC,aAtC8B,CAC9BC,OAAQ,GACRC,OAAQ,GACRC,aAAc,CAAC,IAqCfC,SAAU,CACNC,UAAW,SAACC,EAAOJ,GACfI,EAAMJ,OAASA,EAAOK,SAE1BC,gBAAiB,SAACF,GACdA,EAAMH,aAAa,IAAMG,EAAMH,aAAa,GAAK,GAAK,IAG9DM,cAAe,SAACC,GACZA,EACKC,QAAQnB,EAAsBoB,SAAS,SAACN,GACrCA,EAAML,OAAS,aAElBU,QAAQnB,EAAsBqB,WAAW,SAACP,EAAOQ,GAC9CR,EAAML,OAAS,OACfK,EAAMJ,OAASY,EAAOP,QAAQL,UAEjCS,QAAQf,EAA4BgB,SAAS,SAACN,EAAOQ,GAClDR,EAAML,OAAS,UACfK,EAAMJ,OAAS,MAElBS,QAAQf,EAA4BiB,WAAW,SAACP,EAAOQ,GACpDR,EAAML,OAAS,OACfK,EAAMJ,OAASY,EAAOP,QAAQL,cAyBvC,EAGHL,EAAYkB,QAFZV,EADG,EACHA,UACAG,EAFG,EAEHA,gBAMSQ,EAAY,SAACV,GAAD,OAAsBA,EAAMJ,OAAOA,QAC/Ce,EAAmB,SAACX,GAAD,OAAsBA,EAAMJ,OAAOC,cAGpDN,IAAf,Q,OC5GO,SAASqB,IACZ,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cACVC,EAAW7C,IAWjB,OACI,qBAAK8C,MAAO,CAACC,QAAS,eAAgBC,UAAU,UAAhD,SACI,uBAAMC,SAAU,SAACC,GAAQA,EAAEC,iBAN/BR,EAAQS,KAAR,gCAAsCC,mBAAmBZ,KACzDI,EAAShB,MAKL,UACI,uBAAOyB,KAAM,OAAQC,MAAOd,EAAWe,SAZnD,SAAsBC,GAClBA,EAAMN,iBACNT,EAAae,EAAMC,OAAOH,UAU8C,iD,kBCXzE,SAASI,IACZ,IAAMC,EAAqBC,cACrBC,EAAeC,mBAAmBH,EAAOhD,OACzCiC,EAAW7C,IACXgE,EAAY9D,EAAemC,GAC3B4B,EAAgB/D,EAAeoC,GAC/BK,EAAUC,cAEhBsB,qBAAU,WACNrB,EAASnB,EAAU,KACnBmB,EAAS5B,EAA4B6C,MACtCG,GAMH,IAAME,EAAOH,EAAUI,KAAI,SAACC,GACxB,OACI,sBAAKC,UAAW,YAAaxB,MAAO,CAACyB,QAAS,qBAAsBC,QAAS,kBAN/DC,EAMkFJ,EAAMK,SAL1G/B,EAAQS,KAAR,iBAAuBqB,IAD3B,IAAsBA,GAMd,UACsC,qBAAKE,IAAK,gEAC5C,sBAAKL,UAAW,YAAhB,UAA8BD,EAAMO,MAApC,IAA2C,uBACtCP,EAAMQ,OADX,IACmB,uBACdR,EAAMS,MAFX,IAEkB,gCAM9B,OACI,sBAAKR,UAAW,OAAhB,UAEI,qBAAKG,GAAI,UAAT,qBAGA,qBAAKA,GAAI,aAAT,SACKN,O,MC/CV,SAASY,EAAUC,GAKtB,IAJA,IAAIC,EAAaC,KAAKF,EAAQG,MAAM,KAAK,IACrCC,EAAK,IAAIC,YAAYJ,EAAWK,QAChCC,EAAK,IAAIC,WAAWJ,GAEfK,EAAI,EAAGA,EAAIR,EAAWK,OAAQG,IACnCF,EAAGE,GAAKR,EAAWS,WAAWD,GAElC,OAAO,IAAIE,KAAK,CAACP,GAAK,CAAC9B,KAAM,eCgBjC,IAsBasC,EAAY9E,YACrB,mBADqC,uCAErC,WAAOJ,GAAP,2BAAAK,EAAA,yDACWY,EAAyBjB,EAAzBiB,MAAOkE,EAAkBnF,EAAlBmF,MAAOlD,EAAWjC,EAAXiC,QACD,KAAhBhB,EAAM0C,MAFd,wDAMI3D,EAAKmC,SAASiD,EAAU,cAElBC,EAAW,IAAIC,SACrBC,QAAQC,IAAI,QACZH,EAASI,OAAO,SAAUC,aAAaC,UACvCN,EAASI,OAAO,cAAexE,EAAM2E,aACrCL,QAAQC,IAAI,QAZhB,UAasCK,MAAM5E,EAAM6E,cAAc7E,EAAM8E,qBAA0ChG,MAAK,SAAAiG,GAAC,OAAIA,EAAEC,UAb5H,eAaUC,EAbV,iBAcsCL,MAAM5E,EAAMkF,cAAclF,EAAMmF,qBAA0CrG,MAAK,SAAAiG,GAAC,OAAIA,EAAEC,UAd5H,QAcUI,EAdV,OAeIhB,EAASI,OAAO,QAASS,EAAzB,UAAiDjF,EAAMqF,SAAvD,SACAjB,EAASI,OAAO,QAASY,EAAzB,UAAiDpF,EAAMqF,SAAvD,SACAf,QAAQC,IAAI,SACZH,EAASI,OAAO,SAAUxE,EAAML,QAChCyE,EAASI,OAAO,QAASxE,EAAMiD,OAC/BmB,EAASI,OAAO,MAAOxE,EAAMsF,KACvBN,EAAO5B,EAAUpD,EAAM0C,OAC7B0B,EAASI,OAAO,QAASQ,EAAMhF,EAAMqF,UACrCf,QAAQC,IAAIH,GACZE,QAAQC,IAAI,QACZ3F,IAAM2G,KAAK,aAAcnB,EAAU,CAC/BoB,QAAS,CACL,MAAStB,EACT,OAAUO,aAAaC,YAE5B5F,MAAK,SAAC2G,GACL1G,EAAKmC,SAASiD,EAAU,SACA,eAApBsB,EAAI1G,KAAKY,OAITqB,EAAQS,KAAR,KAEAT,EAAQS,KAAK,aAtCzB,4CAFqC,uDAgD5BiE,EAAclG,YAAY,CACnCC,KAAM,SACNC,aAxE8B,CAC9BwD,OAAQ,GACRyB,YAAa,GACbU,SAAU,SACV1F,OAAQ,OACRgG,eAAgB,GAChBb,mBAAoB,IACpBD,cAAe,CAAC,GAAG,GAAG,GAAG,IACzBM,mBAAoB,IACpBD,cAAe,CAAC,GAAG,GAAG,GAAG,IACzBjC,MAAO,GACPqC,IAAK,GACL5C,MAAO,IA8DP5C,SAAU,CACN8F,UAAW,SAAC5F,EAAOQ,GACfR,EAAMkD,OAAS1C,EAAOP,SAG1B4F,SAAU,SAAC7F,EAAOQ,GACdR,EAAMiD,MAAQzC,EAAOP,SAEzB6F,eAAgB,SAAC9F,EAAOQ,GACpBR,EAAM2E,YAAcnE,EAAOP,SAE/B8F,OAAQ,SAAC/F,EAAOQ,GACZR,EAAMsF,IAAM9E,EAAOP,SAEvB+F,YAAa,SAAChG,EAAOQ,GACjBR,EAAMqF,SAAW7E,EAAOP,SAE5BgG,kBAAmB,SAACjG,EAAOQ,GACvBR,EAAM2F,eAAiBnF,EAAOP,SAElCiG,sBAAuB,SAAClG,EAAOQ,GAC3BR,EAAM8E,mBAAqBtE,EAAOP,SAEtCkG,iBAAkB,SAACnG,EAAOQ,GACtBR,EAAM6E,cAAgBrE,EAAOP,SAEjCmG,sBAAuB,SAACpG,EAAOQ,GAC3BR,EAAMmF,mBAAqB3E,EAAOP,SAEtCoG,iBAAkB,SAACrG,EAAOQ,GACtBR,EAAMkF,cAAgB1E,EAAOP,SAEjCkE,UAAW,SAACnE,EAAOQ,GACfR,EAAML,OAASa,EAAOP,SAE1BqG,SAAU,SAACtG,EAAOQ,GACdR,EAAM0C,MAAQlC,EAAOP,YAK1B,EAaHyF,EAAYjF,QAXZqF,GAFG,EACHF,UADG,EAEHE,gBACAE,EAHG,EAGHA,YACAC,EAJG,EAIHA,kBACA9B,EALG,EAKHA,UACA+B,EANG,EAMHA,sBACAC,EAPG,EAOHA,iBACAC,EARG,EAQHA,sBACAC,EATG,EASHA,iBACAR,EAVG,EAUHA,SAEAS,GAZG,EAWHP,OAXG,EAYHO,UAMSC,EAAe,SAACvG,GAAD,OAAsBA,EAAMwG,OAAOtD,QAClDuD,EAAoB,SAACzG,GAAD,OAAsBA,EAAMwG,OAAO7B,aACvD+B,EAAiB,SAAC1G,GAAD,OAAsBA,EAAMwG,OAAOnB,UACpDsB,EAAsB,SAAC3G,GAAD,OAAsBA,EAAMwG,OAAOb,gBACzDiB,EAAe,SAAC5G,GAAD,OAAsBA,EAAMwG,OAAO7G,QAClDkH,EAA2B,SAAC7G,GAAD,OAAsBA,EAAMwG,OAAO1B,oBAC9DgC,EAAsB,SAAC9G,GAAD,OAAsBA,EAAMwG,OAAO3B,eACzDkC,GAA2B,SAAC/G,GAAD,OAAsBA,EAAMwG,OAAOrB,oBAC9D6B,GAAsB,SAAChH,GAAD,OAAsBA,EAAMwG,OAAOtB,eACzD+B,GAAc,SAACjH,GAAD,OAAsBA,EAAMwG,OAAOvD,OACjDiE,GAAoB,SAAClH,GAAD,OAAsBA,EAAMwG,QAEhDW,GAAc,SAACnH,GAAD,OAAsBA,EAAMwG,OAAO9D,OAG/CgD,KAAf,QCzKO,SAAS0B,GAAa1C,EAAkB2C,GAC3C,OAAO,IAAI3I,SAAsC,SAACC,GAC9CC,IAAM2G,KAAK,kBAAmB,CAACb,SAAUA,EAAU2C,SAAUA,IAAWvI,MAAK,SAACC,GAC1EJ,EAAQI,SCepB,IAAMW,GAA2B,CAC7BC,OAAQ,GACR+E,SAAU,OACV2C,SAAU,OACVC,OAAQ,CACJ5C,SAAU,GACV2C,SAAU,IAEdE,gBAK+BC,IAA3B/C,aAAagD,WAA2BhD,aAAagD,UAAYC,KAAKC,SACtEC,SAASC,OAAS,IACX,GANX3D,MAAUO,aAAaC,UAAckD,SAASC,OAAUD,SAASC,OAAS,IAkBvE,IAAMC,GAAoB3I,YAC7B,qBAD6C,uCAE7C,WAAOa,GAAP,eAAAZ,EAAA,sEAC2BgI,GAAapH,EAAM0E,SAAU1E,EAAMqH,UAD9D,cACUhI,EADV,yBAGWA,EAASN,MAHpB,2CAF6C,uDASpCgJ,GAAavI,YAAY,CAClCC,KAAM,QACNC,gBAEAI,SAAU,CACNkI,YAAa,SAAChI,EAAO0E,GACjB1E,EAAM0E,SAAWA,EAASzE,SAE9BgI,YAAa,SAACjI,EAAOqH,GACjBrH,EAAMqH,SAAWA,EAASpH,SAE9BiI,iBAAkB,SAAClI,EAAOmI,GACtBnI,EAAMsH,OAAO5C,SAAWyD,EAAMlI,SAElCmI,iBAAkB,SAACpI,EAAOmI,GACtBnI,EAAMsH,OAAOD,SAAWc,EAAMlI,SAElCoI,YAAa,SAACrI,EAAOmI,GACjBnI,EAAMuH,SAAWY,EAAMlI,SAE3BqI,SAAU,SAACtI,EAAOmI,GACdnI,EAAMkE,MAAQiE,EAAMlI,UAI5BE,cAAe,SAACC,GACZA,EACKC,QAAQyH,GAAkBxH,SAAS,SAACN,GACjCA,EAAML,OAAS,aAElBU,QAAQyH,GAAkBvH,WAAW,SAACP,EAAOQ,GAC1CR,EAAML,OAAS,aAKxB,GAQHoI,GAAWtH,QAPXuH,GADG,GACHA,YACAC,GAFG,GAEHA,YACAC,GAHG,GAGHA,iBACAE,GAJG,GAIHA,iBACAC,GALG,GAKHA,YACAC,GANG,GAMHA,SAOSC,GAAmB,SAACvI,GAAD,OAAsBA,EAAMwI,OAC/CC,GAAiB,SAACzI,GAAD,OAAsBA,EAAMwI,MAAM9D,UACnDgE,GAAiB,SAAC1I,GAAD,OAAsBA,EAAMwI,MAAMnB,UAEnDsB,GAAuB,SAAC3I,GAAD,OAAsBA,EAAMwI,MAAMlB,OAAO5C,UAChEkE,GAAuB,SAAC5I,GAAD,OAAsBA,EAAMwI,MAAMlB,OAAOD,UAChEwB,GAAiB,SAAC7I,GAAD,OAAsBA,EAAMwI,MAAMjB,UACnDuB,GAAc,SAAC9I,GAAD,OAAsBA,EAAMwI,MAAMtE,OAE9C6D,MAAf,Q,SClFMgB,GAASC,wBAAa,CAACzE,KAAK,IAG3B,SAAS0E,KACG1K,EAAegI,GAA9B,IACMtD,EAAQ1E,EAAe0I,IACvBtC,EAAcpG,EAAekI,GAC7BpB,EAAW9G,EAAemI,GAC1BhE,EAAQnE,EAAe4I,IACvBjD,EAAQ3F,EAAeuK,IACvBnD,EAAiBpH,EAAeoI,GAChC7B,EAAqBvG,EAAesI,GACpChC,EAAgBtG,EAAeuI,GAC/B3B,EAAqB5G,EAAewI,IACpC7B,EAAgB3G,EAAeyI,IAC/BrH,EAASpB,EAAeqI,GACxB5G,EAAQzB,EAAe2I,IAEvBhG,EAAW7C,IACX2C,EAAUC,cAhBK,SAsBNiI,EAtBM,8EAsBrB,WAA0B3H,GAA1B,mBAAAnC,EAAA,2DAC2B,OAAnBmC,EAAEQ,OAAOoH,OAAkB5H,EAAEQ,OAAOoH,MAAMxF,OAAS,GAD3D,qDAEUyF,EAAO7H,EAAEQ,OAAOoH,MAAM,IACjBxH,KAAK0H,WAAW,SAH/B,iDAIInI,EAASiD,EAAU,eACbmF,EAAe1B,SAAS2B,cAAc,UAC/BC,iBAAiB,cAAc,WACxCC,EAAaL,EAAME,EAAaI,aAEpCJ,EAAatG,IAAM2G,IAAIC,gBAAgB,IAAI5F,KAAK,CAACoF,KACjDE,EAAaO,QAEPC,EAAa,IAAIC,YACZC,OAAS,WAIhB9I,EAASoF,EAASwD,EAAWG,SAC7B/I,EAAS8E,EAAYoD,EAAK3J,QAE9BqK,EAAWI,cAAcd,GApB7B,6CAtBqB,sBAiBJ7K,EAAesK,KAE5B7H,EAAQS,KAAK,UA0BjBc,qBAAU,WACNsH,MACD,IACH,IAAMA,EAAI,uCAAG,sBAAAzK,EAAA,yDACJ2J,GAAOoB,WADH,gCAECpB,GAAOc,OAFR,OAKTjL,IAAM2G,KAAK,aAAc,CAACD,IAAK,0GAA0GxG,MAAK,SAACsK,GAC3IgB,EAAehB,EAAKrK,KAAKA,SANpB,2CAAH,qDAhDW,SA2DNqL,EA3DM,8EA2DrB,WAA8BhB,GAA9B,eAAAhK,EAAA,sDACI8B,EAASiD,EAAU,eACbmF,EAAe1B,SAAS2B,cAAc,UAC/BC,iBAAiB,cAAc,WACxCC,EAAaL,EAAME,EAAaI,aAEpCJ,EAAatG,IAAMoG,EACnBE,EAAaO,OACb3I,EAASoF,EAAS8C,IAElBlI,EAAS8E,EAAY,mBAVzB,4CA3DqB,sBA0ErB,IAAMyD,EAAY,uCAAG,WAAOL,EAAWM,GAAlB,iDAAAtK,EAAA,kEAEjB2J,GAFiB,SAEyBsB,qBAAUjB,GAFnC,+BAEVkB,GAFU,UAEP,YAAa,YAFN,MAIXC,EAAW,EACXC,EAAO,IAAIC,MAAMF,GACjBG,EAAO,IAAID,MAAMF,GAEjBI,EARW,gBAOAjB,GAAYa,EAAW,IAPvB,UASXxB,GAAO6B,IAAI,KAAM,YAAa,MAAOD,EAAS,UATnC,QAajBD,EAAK,GAAK3B,GAAOuB,GAAG,WAAY,SAEhCI,EAAK,GAAK3B,GAAOuB,GAAG,WAAY,SAEhCI,EAAK,GAAK3B,GAAOuB,GAAG,WAAY,SAEhCI,EAAK,GAAK3B,GAAOuB,GAAG,WAAY,SAIvBxG,EAAI,EAvBI,aAuBDA,EAAIyG,GAvBH,oBAwBPM,EAAWnB,GAAYa,EAAW,IAAMzG,EAAI,GAC5CgH,EAAYC,KAAKC,IAAI,EAAGH,EAAW,IACnCI,EAAUF,KAAKG,IAAIxB,EAAUmB,EAAW,IACxCM,EAAYL,EAAUM,WACtBC,EA5BO,UA4BOvH,EA5BP,UA6BTgH,EAAY,EAAIpB,GA7BP,kCA8BHX,GAAO6B,IAAI,KAAM,YAAa,KAAM,IAAK,MAAOO,EAAW,KAAM,MAAOE,GA9BrE,iDAgCHtC,GAAO6B,IAAI,KAAM,YAAa,MAAOlB,EAAWuB,GAASG,WAAY,MAAOD,EAAW,KAAM,MAAOE,GAhCjG,QAiCbb,EAAK1G,GAAKiF,GAAOuB,GAAG,WAAYe,GAjCnB,QAuBavH,IAvBb,wBAqCXwH,EAAQ3B,IAAIC,gBAAgB,IAAI5F,KAAK,CAACwG,EAAK,GAAGe,QAAS,CAAC5J,KAAM,eAC9D6J,EAAQ7B,IAAIC,gBAAgB,IAAI5F,KAAK,CAACwG,EAAK,GAAGe,QAAS,CAAC5J,KAAM,eAC9D8J,EAAQ9B,IAAIC,gBAAgB,IAAI5F,KAAK,CAACwG,EAAK,GAAGe,QAAS,CAAC5J,KAAM,eAC9D+J,EAAQ/B,IAAIC,gBAAgB,IAAI5F,KAAK,CAACwG,EAAK,GAAGe,QAAS,CAAC5J,KAAM,eAC9DgK,EAAQhC,IAAIC,gBAAgB,IAAI5F,KAAK,CAAC0G,EAAK,GAAGa,QAAS,CAAC5J,KAAM,eAC9DiK,EAAQjC,IAAIC,gBAAgB,IAAI5F,KAAK,CAAC0G,EAAK,GAAGa,QAAS,CAAC5J,KAAM,eAC9DkK,EAAQlC,IAAIC,gBAAgB,IAAI5F,KAAK,CAAC0G,EAAK,GAAGa,QAAS,CAAC5J,KAAM,eAC9DmK,EAAQnC,IAAIC,gBAAgB,IAAI5F,KAAK,CAAC0G,EAAK,GAAGa,QAAS,CAAC5J,KAAM,eAGpET,EAASiF,EAAiB,CAACmF,EAAOE,EAAOC,EAAOC,KAChDxK,EAASmF,EAAiB,CAACsF,EAAOC,EAAOC,EAAOC,KAChD5K,EAASiD,EAAU,SAjDF,4CAAH,wDA8DlB,IAAI4H,EAAiB,sBAAKjJ,GAAI,kBAAT,UACjB,0CACA,gCACI,wBAAQD,QAAS,WAAO3B,EAAS+E,EAAkB,OAAnD,kBACA,wBAAQpD,QAAS,WAAO3B,EAAS+E,EAAkB,OAAnD,qBAEJ,uBAAOtE,KAAM,OAAQqK,OAAQ,UAAWnK,SAAUqH,OAsBtD,MApBc,KAAVxG,IACAqJ,EACI,gCACI,0CAEI,sBAAKjJ,GAAI,YAAa3B,MAAO,CAACE,UAAW,OAAzC,UACKgE,EACD,uBAAOlE,MAAO,CAAC8K,MAAO,SAAUD,OAAQ,UAAWrK,KAAM,OAAQE,SAAUqH,UAE3E,2BAYhB,sBAAM5H,SAAU,SAACC,GACbA,EAAEC,iBAvCNN,EAAS+C,EAAU,CACfjE,MAAOA,EACPkE,MAAOA,EACPlD,QAASA,EACTE,SAAUA,MAkCd,SAII,sBAAK4B,GAAI,iBAAT,UACI,qBAAKA,GAAG,qBAER,sBAAKA,GAAI,SAAUH,UAAW,SAA9B,UACI,wBAAOG,GAAI,QAAX,kBACS,uBACL,0BAAUlB,MAAOqB,EAAOpB,SAAU,SAACN,GAC/BA,EAAEC,iBACFN,EAAS2E,EAAStE,EAAEQ,OAAOH,cAE3B,uBACR,uBAEA,gDACe,uBACX,0BAAUA,MAAO+C,EAAa9C,SAAU,SAACN,GACrCA,EAAEC,iBACFN,EAAS4E,EAAevE,EAAEQ,OAAOH,SAClCT,MAAO,CAAC+K,OAAQ,WAAW,0BAC1B,uBAER,wBAAOpJ,GAAI,YAAX,sBACa,uBACT,qBAAKA,GAAG,qBAAR,SACI,sBAAKH,UAAW,oBAAhB,UACI,qBAAKK,IAAKkC,EAAc,GAAIvC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASkF,EAAsB,OAAOjF,MAAO,CAACgL,QAAgC,MAAvBhH,EAA6B,IAAM,UACjK,qBAAKnC,IAAKkC,EAAc,GAAIvC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASkF,EAAsB,OAAOjF,MAAO,CAACgL,QAAgC,MAAvBhH,EAA6B,IAAM,UACjK,qBAAKnC,IAAKkC,EAAc,GAAIvC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASkF,EAAsB,OAAOjF,MAAO,CAACgL,QAAgC,MAAvBhH,EAA6B,IAAM,UACjK,qBAAKnC,IAAKkC,EAAc,GAAIvC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASkF,EAAsB,OAAOjF,MAAO,CAACgL,QAAgC,MAAvBhH,EAA6B,IAAM,kBAK7K,uBACA,qBAAKhE,MAAO,CAACC,QAAS,OAAQgL,eAAgB,UAA9C,SACI,iDAGR,sBAAKtJ,GAAG,cAAR,UAEI,sBAAKA,GAAI,sBACJ3B,MAAO,CAACC,QAAoB,cAAXzB,EAAyB,QAAU,OAAQwM,QAAuB,KADxF,UAKI,oBAAIhL,MAAO,CAACkL,WAAY,QAAxB,qBACA,uBACA,mEAEJ,sBAAKvJ,GAAI,uBAAwB3B,MAAO,CAACgL,QAAoB,SAAXxM,EAAoB,IAAM,KAA5E,UACKoM,EACD,sBAAKpJ,UAAW,oBAAqBxB,MAAO,CAACgL,QAASxG,EAAgB2G,cAAkC,MAAnB3G,EAAyB,OAAQ,SAAtH,UACI,qBAAK3C,IAAK6B,EAAc,GAAIlC,UAAW,gBAAkBE,QAAS,kBAAM3B,EAASgF,EAAsB,OAAO/E,MAAO,CAACgL,QAAgC,MAAvBrH,EAA6B,IAAiB,SAAXnF,EAAoB,IAAO,KAC7L,qBAAKqD,IAAK6B,EAAc,GAAIlC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASgF,EAAsB,OAAO/E,MAAO,CAACgL,QAAgC,MAAvBrH,EAA6B,IAAiB,SAAXnF,EAAoB,IAAO,KAC5L,qBAAKqD,IAAK6B,EAAc,GAAIlC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASgF,EAAsB,OAAO/E,MAAO,CAACgL,QAAgC,MAAvBrH,EAA6B,IAAiB,SAAXnF,EAAoB,IAAO,KAC5L,qBAAKqD,IAAK6B,EAAc,GAAIlC,UAAW,gBAAiBE,QAAS,kBAAM3B,EAASgF,EAAsB,OAAO/E,MAAO,CAACgL,QAAgC,MAAvBrH,EAA6B,IAAiB,SAAXnF,EAAoB,IAAO,cAIxM,qBAAKmD,GAAG,2B,MC/PjB,SAASyJ,KACZ,IAAMrL,EAAW7C,IACXgE,EAAY9D,EAAemC,GAC3BM,EAAUC,cAEhBsB,qBAAU,WACNrB,EAAShC,OAEV,IAMH,IAAMsD,EAAI,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAWI,KAAI,SAACC,GACzB,OACI,sBAAKC,UAAW,QAASE,QAAS,kBANpBC,EAMuCJ,EAAMK,SAL/D/B,EAAQS,KAAR,iBAAuBqB,IAD3B,IAAsBA,GAMd,UAEI,qBAAKE,IAAKN,EAAM8J,aACXC,aAAc,SAAClL,GACXA,EAAEmL,cAAc1J,IAAIN,EAAMiK,cAE9BC,aAAc,SAACrL,GACXA,EAAEmL,cAAc1J,IAAIN,EAAM8J,gBAEnC,gCACK9J,EAAMO,MADX,IACkB,uBACbP,EAAMQ,OAFX,IAEmB,uBACdR,EAAMS,MAHX,UAGwB,gCAKpC,OACI,sBAAKL,GAAI,OAAT,UACI,qBAAKA,GAAI,YAGT,qBAAKA,GAAI,YAAT,SACKN,OC7CV,SAASqK,GAAmB/J,GAC/B,OAAO,IAAIpE,SAA0C,SAACC,GAClDC,IAAMC,IAAN,yBAA4BiE,IAAMhE,MAAK,SAACC,GACpCJ,EAAQI,SCQpB,IASa+N,GAA0B3N,YACnC,8BADmD,uCAEnD,WAAO2D,GAAP,eAAA1D,EAAA,sEAC2ByN,GAAmB/J,GAD9C,cACUzD,EADV,yBAGWA,EAASN,MAHpB,2CAFmD,uDAS1CgO,GAAgBvN,YAAY,CACrCC,KAAM,SACNC,aApBgC,CAChCC,OAAQ,GACR+C,MAAO,IAoBP5C,SAAU,CACNwG,SAAU,SAACtG,EAAO0C,GACd1C,EAAM0C,MAAM,GAAKA,EAAMzC,UAG/BE,cAAe,SAACC,GACZA,EACKC,QAAQyM,GAAwBxM,SAAS,SAACN,GACvCA,EAAML,OAAS,aAElBU,QAAQyM,GAAwBvM,WAAW,SAACP,EAAOQ,GAChDR,EAAML,OAAS,OACfK,EAAM0C,MAAQlC,EAAOP,QAAQL,aAgChCoN,IALTD,GAActM,QADd6F,SAMoB,SAACtG,GAAD,OAAsBA,EAAMiN,SAASvK,QAG9CqK,MAAf,Q,MCxEO,SAASG,KACZ,IAAMhM,EAAW7C,IAEX4O,GADUhM,cACC1C,EAAeyO,KAC1B/K,EAAmBC,cAWzB,OAVAK,qBAAU,WAMNrB,EAAS4L,GAAwB7K,EAAOa,OACzC,IAGqB,IAApBmK,EAAStJ,QAAwC,kBAAhBsJ,EAAS,GAEtC,6CAMJ,sBAAKnK,GAAI,YAAT,UACI,sBAAKA,GAAI,oBAAT,UACI,uBAAOA,GAAI,QAASqK,UAAQ,EAA5B,SACI,wBAAQnK,IAAKiK,EAAS,GAAGjK,IAAKrB,KAAM,gBAExC,qBAAKmB,GAAI,QAAT,SAAmBmK,EAAS,GAAGhK,QAC/B,sBAAKH,GAAI,cAAT,UAAwB,uBACpB3B,MAAO,CAACiM,aAAc,QADF,UACYH,EAAS,GAAG9J,MADxB,YAC4C,IAAIuE,KAAKuF,EAAS,GAAGI,MAAMC,kBAE/F,gCACI,sBAAKnM,MAAO,CAACC,QAAS,OAAQgL,eAAgB,YAA9C,UACKa,EAAS,GAAGM,MADjB,YAGA,6BAGR,qBAAKzK,GAAI,UAAT,2BC3BL,SAAS0K,KACZ,IAAMtM,EAAW7C,IACXoP,EAAalP,EAAegK,IAC5B7D,EAAWnG,EAAekK,IAC1BpB,EAAW9I,EAAemK,IAC1BgF,EAAiBnP,EAAeoK,IAChCgF,EAAiBpP,EAAeqK,IAGhC5H,EAAUC,cAEhB,SAAS2M,EAAaC,EAAmBC,GACrC,OAAQD,GACJ,IAAK,WACGC,EAAOnK,OAPJ,EAQHzC,EAASgH,GAAiB,6BAAD,OARtB,EAQsB,uBAEzBhH,EAASgH,GAAiB,KAE9B,MACJ,IAAK,WACG4F,EAAOnK,OAbJ,EAcHzC,EAASkH,GAAiB,6BAAD,OAdtB,EAcsB,uBAEzBlH,EAASkH,GAAiB,MA8B1C,OACI,qBAAKjH,MAAO,CAACE,UAAW,UAAxB,SACI,uBAAMC,SAAU,SAACC,GACbA,EAAEC,iBA1BNkD,EAASf,OAxBE,GAwBqB0D,EAAS1D,OAvB9B,GAwBfzC,EAAS4G,GAAkB2F,IAAa3O,MAAK,SAAC2G,GACf,eAAvBA,EAAIxF,QAAQN,QAEZ8E,aAAasJ,QAAQ,WAAYtI,EAAIxF,QAAQyE,UAC7CD,aAAasJ,QAAQ,QAAStI,EAAIxF,QAAQiE,OAC1CO,aAAasJ,QAAQ,YAAarG,KAAKC,MAAQlC,EAAIxF,QAAQ+N,WAE3DpG,SAASC,OAASpC,EAAIxF,QAAQiE,MAC9BhD,EAASmH,IAAY,IACrBnH,EAASoH,GAAS7C,EAAIxF,QAAQiE,QAC9BlD,EAAQS,KAAK,MAEe,mBAAvBgE,EAAIxF,QAAQN,OACjBuB,EAASkH,GAAiB,yBAG1BlH,EAASgH,GAAiB,6BAC1BhH,EAASkH,GAAiB,kCAO9B,UAII,8CACa,uBACT,uBAAOzG,KAAM,OAAQlC,KAAM,WAAYmC,MAAO8C,EAAU7C,SAAU,SAACN,GAC/DL,EAAS8G,GAAYzG,EAAEQ,OAAOH,QAC9BgM,EAAa,WAAYrM,EAAEQ,OAAOH,UAClC,uBACH8L,KACG,uBACR,8CACa,uBACT,uBAAO/L,KAAM,WAAYlC,KAAM,WAAYmC,MAAOyF,EAC3CxF,SAAU,SAACN,GACPL,EAAS+G,GAAY1G,EAAEQ,OAAOH,QAC9BgM,EAAa,WAAYrM,EAAEQ,OAAOH,UAClC,uBACV+L,KACG,uBACR,uBACA,uBAAOhM,KAAM,SAAUC,MAAO,e,MC3C/BqM,OA1Cf,WAEI,OACI,qBAAKnL,GAAI,MAAT,SACI,eAAC,IAAD,WACI,sBAAKA,GAAI,SAAT,UACI,cAAC,IAAD,CAAM3B,MAAO,CAACC,QAAS,gBAAiB8M,GAAI,IAA5C,SAAiD,mBAC7CpL,GAAI,OADyC,0BAEjD,qBAAK3B,MAAO,CAACE,UAAW,SAAUgL,WAAY,OAA9C,SACI,cAACzL,EAAD,MAEJ,sBAAKO,MAAO,CAACkL,WAAY,OAAzB,UACI,cAAC,IAAD,CAAMlL,MAAO,CAACC,QAAS,eAAgBwB,QAAS,iBAC1CsL,GAAI,SADV,SACqB3P,EAAesK,IAAkB,cAAgB,UACtE,cAAC,IAAD,CAAM1H,MAAO,CAACC,QAAS,eAAgBwB,QAAS,iBAC1CsL,GAAI,UADV,0BAIR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAnB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,aAAnB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,+BAAb,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,SAAb,SACI,cAACZ,GAAD,MAEJ,cAAC,IAAD,CAAOY,KAAM,UAAb,SACI,cAAC,GAAD,eC/CjB,SAASC,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAI5P,SAA0B,SAACC,GAAD,OACnC4P,YAAW,kBAAM5P,EAAQ,CAAEI,KAAMuP,MAAW,QCMhD,IAUaE,GAAiBrP,YAC5B,qBAD4C,uCAE5C,WAAOmP,GAAP,eAAAlP,EAAA,sEACyBiP,GAAWC,GADpC,cACQjP,EADR,yBAGSA,EAASN,MAHlB,2CAF4C,uDASjC0P,GAAejP,YAAY,CACtCC,KAAM,UACNC,aArBiC,CACjCkC,MAAO,EACPjC,OAAQ,QAqBRG,SAAU,CACR4O,UAAW,SAAC1O,GAKVA,EAAM4B,OAAS,GAEjB+M,UAAW,SAAC3O,GACVA,EAAM4B,OAAS,GAGjBgN,kBAAmB,SAAC5O,EAAOQ,GACzBR,EAAM4B,OAASpB,EAAOP,UAK1BE,cAAe,SAACC,GACdA,EACGC,QAAQmO,GAAelO,SAAS,SAACN,GAChCA,EAAML,OAAS,aAEhBU,QAAQmO,GAAejO,WAAW,SAACP,EAAOQ,GACzCR,EAAML,OAAS,OACfK,EAAM4B,OAASpB,EAAOP,cAKvB,GAAoDwO,GAAahO,QAmBzDgO,IAnBR,GAAQC,UAAR,GAAmBC,UAAnB,GAA8BC,kBAmBtBH,GAAf,SC1EaI,GAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,GACTzI,OAAQ0I,GACRtP,OAAQuP,EACRlC,SAAUmC,GACV5G,MAAO6G,MCDSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhB,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJjH,SAASkI,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnR,MAAK,SAACoR,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACN/L,QAAQ+L,MAAMA,EAAMC,c","file":"static/js/main.e9767dc6.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {VideoDataResponse} from \"./VideoInterfaces\";\r\n\r\nexport function getVideosFromAPI(){\r\n    return new Promise<AxiosResponse<VideoDataResponse>>((resolve) => {\r\n        axios.get(\"/api/video/all\").then((data:AxiosResponse<VideoDataResponse>) =>{\r\n            resolve(data)\r\n        })\r\n    })\r\n}\r\n\r\nexport function getSearchVideosFromAPI(query: string){\r\n    return new Promise<AxiosResponse<VideoDataResponse>>((resolve) => {\r\n        axios.get(`/api/video/search/${query}`).then((data:AxiosResponse<VideoDataResponse>) =>{\r\n            resolve(data)\r\n        })\r\n    })\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState, AppThunk} from '../../app/store';\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport {VideoDataResponse} from \"./VideoInterfaces\";\r\nimport {Video} from \"./VideoInterfaces\";\r\nimport {getSearchVideosFromAPI, getVideosFromAPI} from \"./videosApi\";\r\n\r\nexport interface VideosState {\r\n    status: string,\r\n    videos: Video[],\r\n    searchClicks: number[]\r\n}\r\n\r\nconst initialState: VideosState = {\r\n    status: \"\",\r\n    videos: [],\r\n    searchClicks: [0]\r\n};\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const getVideosFromApiAsync = createAsyncThunk(\r\n    'videos/getVideosFromApi',\r\n    async () => {\r\n        const response = await getVideosFromAPI();\r\n        // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n);\r\nexport const getSearchVideosFromApiAsync = createAsyncThunk(\r\n    'videos/getSearchVideosFromApi',\r\n    async (query: string) => {\r\n        const response = await getSearchVideosFromAPI(query);\r\n        // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n);\r\nexport const getOneVideoFromApiAsync = createAsyncThunk(\r\n    'video/getOneVideoFromApi',\r\n    async () => {\r\n        const response = await getVideosFromAPI();\r\n        // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n)\r\n\r\n\r\nexport const videosSlice = createSlice({\r\n    name: 'upload',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        setVideos: (state, videos: PayloadAction<Video[]>) => {\r\n            state.videos = videos.payload\r\n        },\r\n        pushSearchClick: (state) => {\r\n            state.searchClicks[0] = (state.searchClicks[0] + 1) % 3\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getVideosFromApiAsync.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getVideosFromApiAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.videos = action.payload.videos;\r\n            })\r\n            .addCase(getSearchVideosFromApiAsync.pending, (state, action) => {\r\n                state.status = 'loading';\r\n                state.videos = [];\r\n            })\r\n            .addCase(getSearchVideosFromApiAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.videos = action.payload.videos;\r\n            })\r\n    },\r\n\r\n    // author: \"\",\r\n    // description: \"\",\r\n    // thumbnail: \"\",\r\n    // status: 'idle',\r\n    // title: \"\",\r\n    // url: \"\",\r\n    // video: \"\"\r\n    // getVideosReq: (state) => {\r\n    //     axios.get(\"/api/video/all\").then((data:AxiosResponse<VideoDataResponse>) => {\r\n    //         state.videos = data.data.videos\r\n    //         console.log(data)\r\n    //     })\r\n    // }\r\n})\r\n// author: \"\",\r\n//     description: \"\",\r\n//     thumbnail: \"\",\r\n//     status: 'idle',\r\n//     title: \"\",\r\n//     url: \"\",\r\n//     video: \"\"\r\nexport const {\r\n    setVideos,\r\n    pushSearchClick\r\n} = videosSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const getVideos = (state: RootState) => state.videos.videos;\r\nexport const getSearchHistory = (state: RootState) => state.videos.searchClicks\r\n\r\n\r\nexport default videosSlice.reducer;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useAppDispatch} from \"../hooks\";\r\nimport {pushSearchClick} from \"../Videos/videosSlice\";\r\n\r\nexport function SearchBar(){\r\n    const [searchStr, setSearchStr] = useState(\"\")\r\n    const history = useHistory()\r\n    const dispatch = useAppDispatch()\r\n\r\n    function handleChange(event: ChangeEvent<HTMLInputElement>){\r\n        event.preventDefault()\r\n        setSearchStr(event.target.value)\r\n    }\r\n    function onClickButton(){\r\n        history.push(`/results/search_query=${encodeURIComponent(searchStr)}`)\r\n        dispatch(pushSearchClick())\r\n    }\r\n\r\n    return (\r\n        <div style={{display: \"inline-block\", textAlign:\"center\"}}>\r\n            <form onSubmit={(e) => { e.preventDefault(); onClickButton()}}>\r\n                <input type={\"text\"} value={searchStr} onChange={handleChange}/><button>Search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import {useHistory, useParams} from \"react-router-dom\"\r\nimport './SearchResults.scss'\r\nimport {useEffect} from \"react\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks\";\r\nimport {getSearchHistory, getSearchVideosFromApiAsync, getVideos, setVideos} from \"../Videos/videosSlice\";\r\nimport {getSearchVideosFromAPI} from \"../Videos/videosApi\";\r\n\r\ninterface QueryParams {\r\n    query: string\r\n}\r\n\r\nexport function SearchResults(){\r\n    const params:QueryParams = useParams()\r\n    const searchParams = decodeURIComponent(params.query)\r\n    const dispatch = useAppDispatch()\r\n    const allVideos = useAppSelector(getVideos)\r\n    const searchHistory = useAppSelector(getSearchHistory)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(setVideos([]))\r\n        dispatch(getSearchVideosFromApiAsync(searchParams))\r\n    }, searchHistory)\r\n\r\n    function onClickVideo(id:string){\r\n        history.push(`/watch/${id}`)\r\n    }\r\n\r\n    const rows = allVideos.map((video) => {\r\n        return (\r\n            <div className={\"searchrow\"} style={{padding: \"20px 0px 20px 0px\"}} onClick={() => onClickVideo(video._id)}>\r\n                {/*<img src={video.thumbnail}/>*/}<img src={\"https://getuikit.com/v2/docs/images/placeholder_600x400.svg\"}/>\r\n                <div className={\"videoinfo\"}>{video.title} <br/>\r\n                    {video.author} <br/>\r\n                    {video.views} <br/>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={\"grid\"}>\r\n            {/*<div style={{gridColumnEnd: 2}}>*/}\r\n            <div id={\"sidebar\"}>\r\n                Sidebar\r\n            </div>\r\n            <div id={\"searchrows\"}>\r\n                {rows}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export function b64toBlob(dataURI: string) {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], {type: 'video/webm'});\r\n}\r\n","import {createAsyncThunk, createSlice, PayloadAction, ThunkDispatch} from '@reduxjs/toolkit';\r\nimport {RootState, AppThunk} from '../../app/store';\r\nimport axios from 'axios'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {loginFromApi} from \"../LoginReg/Login/loginApi\";\r\nimport {LoginState} from \"../LoginReg/Login/loginSlice\";\r\nimport {b64toBlob} from \"./UploadHelpers\";\r\n\r\n\r\nexport interface UploadState {\r\n    author: string,\r\n    description: string,\r\n    fileName: string,\r\n    gifsVisibility: string,\r\n    thumbnailGifsIndex: string,\r\n    thumbnailGifs: string[],\r\n    thumbnailPngsIndex: string,\r\n    thumbnailPngs: string[],\r\n    status: 'idle' | 'uploading' | 'successful' | 'failed'\r\n    title: string,\r\n    url: string,\r\n    video: string\r\n}\r\n\r\nconst initialState: UploadState = {\r\n    author: \"\",\r\n    description: \"\",\r\n    fileName: \"Upload\",\r\n    status: 'idle',\r\n    gifsVisibility: \"\",\r\n    thumbnailGifsIndex: \"0\",\r\n    thumbnailGifs: [\"\",\"\",\"\",\"\"],\r\n    thumbnailPngsIndex: \"0\",\r\n    thumbnailPngs: [\"\",\"\",\"\",\"\"],\r\n    title: \"\",\r\n    url: \"\",\r\n    video: \"\",\r\n};\r\n\r\ninterface postRequestData {\r\n    state: UploadState,\r\n    token: string,\r\n    history: any,\r\n    dispatch: ThunkDispatch<any, any, any>\r\n}\r\n//files : [gifs, pngs, video]\r\nexport const postVideo = createAsyncThunk(\r\n    'upload/postVideo',\r\n    async (data: postRequestData) => {\r\n        const {state, token, history} = data\r\n        if (state.video === \"\") {\r\n            return;\r\n        }\r\n        //this breaks\r\n        data.dispatch(setStatus(\"uploading\"))\r\n\r\n        const formData = new FormData()\r\n        console.log(\"1111\")\r\n        formData.append(\"author\", localStorage.username)\r\n        formData.append(\"description\", state.description)\r\n        console.log(\"2222\")\r\n        const fileReader_thumbGif = await fetch(state.thumbnailGifs[state.thumbnailGifsIndex as unknown as number]).then(r => r.blob());\r\n        const fileReader_thumbPng = await fetch(state.thumbnailPngs[state.thumbnailPngsIndex as unknown as number]).then(r => r.blob());\r\n        formData.append(\"files\", fileReader_thumbGif, `${state.fileName}.gif`)\r\n        formData.append(\"files\", fileReader_thumbPng, `${state.fileName}.png`)\r\n        console.log(\"33333\")\r\n        formData.append(\"status\", state.status)\r\n        formData.append(\"title\", state.title)\r\n        formData.append(\"url\", state.url)\r\n        const blob = b64toBlob(state.video)\r\n        formData.append(\"files\", blob, state.fileName)\r\n        console.log(formData)\r\n        console.log(\"4444\")\r\n        axios.post(\"/api/video\", formData, {\r\n            headers: {\r\n                'token': token,\r\n                'author': localStorage.username\r\n            }\r\n        }).then((res) => {\r\n            data.dispatch(setStatus(\"idle\"))\r\n            if (res.data.status === \"successful\") {\r\n                // File is not uploaded synchronously\r\n                // TODO: Query the upload until it is available..\r\n                // history.push(`watch/${res.data.video._id}`)\r\n                history.push(`/`)\r\n            } else {\r\n                history.push('/login')\r\n            }\r\n        })\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const uploadSlice = createSlice({\r\n    name: 'upload',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        setAuthor: (state, action: PayloadAction<string>) => {\r\n            state.author = action.payload\r\n        },\r\n        //Add payload here\r\n        setTitle: (state, action: PayloadAction<string>) => {\r\n            state.title = action.payload\r\n        },\r\n        setDescription: (state, action: PayloadAction<string>) => {\r\n            state.description = action.payload\r\n        },\r\n        setUrl: (state, action: PayloadAction<string>) => {\r\n            state.url = action.payload\r\n        },\r\n        setFilename: (state, action: PayloadAction<string>) => {\r\n            state.fileName = action.payload\r\n        },\r\n        setGifsVisibility: (state, action: PayloadAction<string>) => {\r\n            state.gifsVisibility = action.payload\r\n        },\r\n        setThumbnailGifsIndex: (state, action: PayloadAction<string>) => {\r\n            state.thumbnailGifsIndex = action.payload\r\n        },\r\n        setThumbnailGifs: (state, action: PayloadAction<string[]>) => {\r\n            state.thumbnailGifs = action.payload\r\n        },\r\n        setThumbnailPngsIndex: (state, action: PayloadAction<string>) => {\r\n            state.thumbnailPngsIndex = action.payload\r\n        },\r\n        setThumbnailPngs: (state, action: PayloadAction<string[]>) => {\r\n            state.thumbnailPngs = action.payload\r\n        },\r\n        setStatus: (state, action: PayloadAction<'idle' | 'uploading' | 'successful' | 'failed'>) => {\r\n            state.status = action.payload\r\n        },\r\n        setVideo: (state, action: PayloadAction<string>) => {\r\n            state.video = action.payload\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    setAuthor,\r\n    setDescription,\r\n    setFilename,\r\n    setGifsVisibility,\r\n    setStatus,\r\n    setThumbnailGifsIndex,\r\n    setThumbnailGifs,\r\n    setThumbnailPngsIndex,\r\n    setThumbnailPngs,\r\n    setTitle,\r\n    setUrl,\r\n    setVideo,\r\n} = uploadSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectAuthor = (state: RootState) => state.upload.author;\r\nexport const selectDescription = (state: RootState) => state.upload.description;\r\nexport const selectFilename = (state: RootState) => state.upload.fileName;\r\nexport const selectGifsVisiblity = (state: RootState) => state.upload.gifsVisibility;\r\nexport const selectStatus = (state: RootState) => state.upload.status;\r\nexport const selectThumbnailGifsIndex = (state: RootState) => state.upload.thumbnailGifsIndex;\r\nexport const selectThumbnailGifs = (state: RootState) => state.upload.thumbnailGifs;\r\nexport const selectThumbnailPngsIndex = (state: RootState) => state.upload.thumbnailPngsIndex;\r\nexport const selectThumbnailPngs = (state: RootState) => state.upload.thumbnailPngs;\r\nexport const selectTitle = (state: RootState) => state.upload.title;\r\nexport const selectUploadState = (state: RootState) => state.upload;\r\nexport const selectUrl = (state: RootState) => state.upload.url;\r\nexport const selectVideo = (state: RootState) => state.upload.video;\r\n\r\n\r\nexport default uploadSlice.reducer;\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {LoginResponse} from \"./LoginInterface\";\r\n\r\nexport function loginFromApi(username: string, password: string) {\r\n    return new Promise<AxiosResponse<LoginResponse>>((resolve) => {\r\n        axios.post(\"api/login/login\", {username: username, password: password}).then((data: AxiosResponse<LoginResponse>) => {\r\n            resolve(data)\r\n        })\r\n    })\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport {getOneVideoFromAPI} from \"../../OneVideo/oneVideoApi\";\r\nimport {loginFromApi} from \"./loginApi\";\r\nimport {LoginResponse} from \"./LoginInterface\";\r\nimport {RootState} from \"../../store\";\r\n\r\nexport interface LoginErrors {\r\n    username: string,\r\n    password: string\r\n}\r\n\r\nexport interface LoginState {\r\n    status: string,\r\n    username: string,\r\n    password: string,\r\n    errors: LoginErrors,\r\n    loggedIn: boolean,\r\n    token: string\r\n}\r\n\r\nconst initialState: LoginState = {\r\n    status: \"\",\r\n    username: \"user\",\r\n    password: \"pass\",\r\n    errors: {\r\n        username: \"\",\r\n        password: \"\"\r\n    },\r\n    loggedIn: checkIfLoggedIn(),\r\n    token: (!!localStorage.username || !!document.cookie) ? document.cookie : \"\"\r\n};\r\n\r\nfunction checkIfLoggedIn() {\r\n    if (localStorage.expiresAt === undefined || localStorage.expiresAt < Date.now()) {\r\n        document.cookie = \"\"\r\n        return false\r\n    } else {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const loginFromApiAsync = createAsyncThunk(\r\n    'login/loginFromApi',\r\n    async (state: LoginState) => {\r\n        const response = await loginFromApi(state.username, state.password);\r\n        // // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        setUsername: (state, username: PayloadAction<string>) => {\r\n            state.username = username.payload\r\n        },\r\n        setPassword: (state, password: PayloadAction<string>) => {\r\n            state.password = password.payload\r\n        },\r\n        setUsernameError: (state, param: PayloadAction<string>) => {\r\n            state.errors.username = param.payload\r\n        },\r\n        setPasswordError: (state, param: PayloadAction<string>) => {\r\n            state.errors.password = param.payload\r\n        },\r\n        setLoggedIn: (state, param: PayloadAction<boolean>) => {\r\n            state.loggedIn = param.payload\r\n        },\r\n        setToken: (state, param: PayloadAction<string>) => {\r\n            state.token = param.payload\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(loginFromApiAsync.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(loginFromApiAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n            })\r\n    },\r\n})\r\n\r\nexport const {\r\n    setUsername,\r\n    setPassword,\r\n    setUsernameError,\r\n    setPasswordError,\r\n    setLoggedIn,\r\n    setToken\r\n\r\n} = loginSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectLoginState = (state: RootState) => state.login\r\nexport const selectUsername = (state: RootState) => state.login.username\r\nexport const selectPassword = (state: RootState) => state.login.password\r\nexport const selectErrors = (state: RootState) => state.login.errors\r\nexport const selectUsernameErrors = (state: RootState) => state.login.errors.username\r\nexport const selectPasswordErrors = (state: RootState) => state.login.errors.password\r\nexport const selectLoggedIn = (state: RootState) => state.login.loggedIn\r\nexport const selectToken = (state: RootState) => state.login.token\r\n\r\nexport default loginSlice.reducer;","import './Upload.scss'\r\nimport {useAppDispatch, useAppSelector} from \"../hooks\";\r\nimport {\r\n    postVideo,\r\n    selectAuthor,\r\n    selectDescription,\r\n    selectFilename, selectGifsVisiblity,\r\n    selectStatus,\r\n    selectThumbnailGifs,\r\n    selectThumbnailGifsIndex,\r\n    selectThumbnailPngs,\r\n    selectThumbnailPngsIndex,\r\n    selectTitle,\r\n    selectUploadState,\r\n    selectVideo,\r\n    setDescription,\r\n    setFilename,\r\n    setGifsVisibility,\r\n    setStatus,\r\n    setThumbnailGifs,\r\n    setThumbnailGifsIndex,\r\n    setThumbnailPngs,\r\n    setThumbnailPngsIndex,\r\n    setTitle,\r\n    setVideo\r\n} from \"./uploadSlice\";\r\nimport {ChangeEvent, Dispatch, SetStateAction, useEffect, useState} from \"react\";\r\nimport {selectLoggedIn, selectToken} from \"../LoginReg/Login/loginSlice\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./Upload.scss\"\r\nimport {createFFmpeg, fetchFile} from \"@ffmpeg/ffmpeg\";\r\nimport axios from \"axios\";\r\n\r\nconst ffmpeg = createFFmpeg({log: false});\r\n\r\n\r\nexport function Upload() {\r\n    const author = useAppSelector(selectAuthor)\r\n    const title = useAppSelector(selectTitle)\r\n    const description = useAppSelector(selectDescription)\r\n    const fileName = useAppSelector(selectFilename)\r\n    const video = useAppSelector(selectVideo)\r\n    const token = useAppSelector(selectToken)\r\n    const gifsVisibility = useAppSelector(selectGifsVisiblity)\r\n    const thumbnailGifsIndex = useAppSelector(selectThumbnailGifsIndex)\r\n    const thumbnailGifs = useAppSelector(selectThumbnailGifs)\r\n    const thumbnailPngsIndex = useAppSelector(selectThumbnailPngsIndex)\r\n    const thumbnailPngs = useAppSelector(selectThumbnailPngs)\r\n    const status = useAppSelector(selectStatus)\r\n    const state = useAppSelector(selectUploadState)\r\n\r\n    const dispatch = useAppDispatch()\r\n    const history = useHistory()\r\n    const loggedIn = useAppSelector(selectLoggedIn)\r\n    if (!loggedIn) {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    async function handleFile(e: ChangeEvent<HTMLInputElement>) {\r\n        if (e.target.files === null || e.target.files.length < 1) return;\r\n        const file = e.target.files[0]\r\n        if (!(file.type.startsWith(\"video\"))) return;\r\n        dispatch(setStatus(\"uploading\"))\r\n        const videoElement = document.createElement(\"video\")\r\n        videoElement.addEventListener(\"loadeddata\", () => {\r\n            convertToGif(file, videoElement.duration)\r\n        })\r\n        videoElement.src = URL.createObjectURL(new Blob([file]))\r\n        videoElement.load()\r\n\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            // const videoElement = document.createElement(\"video\")\r\n            // videoElement.src = fileReader.result as string\r\n            // setTimeout(() => console.log(videoElement.duration, 2), 5000 )\r\n            dispatch(setVideo(fileReader.result as string))\r\n            dispatch(setFilename(file.name))\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }\r\n\r\n    useEffect(() => {\r\n        load();\r\n    }, [])\r\n    const load = async () => {\r\n        if (!ffmpeg.isLoaded()) {\r\n            await ffmpeg.load();\r\n        }\r\n        // put a video for testing\r\n        axios.post(\"/test_file\", {url: \"https://groupsharetk.s3.us-west-1.amazonaws.com/videos/1625451065385+when+they+call+u+a+good+boi.webm\"}).then((file) => {\r\n            handleTestFile(file.data.data)\r\n        })\r\n\r\n    }\r\n\r\n    async function handleTestFile(file: string) {\r\n        dispatch(setStatus(\"uploading\"))\r\n        const videoElement = document.createElement(\"video\")\r\n        videoElement.addEventListener(\"loadeddata\", () => {\r\n            convertToGif(file, videoElement.duration)\r\n        })\r\n        videoElement.src = file\r\n        videoElement.load()\r\n        dispatch(setVideo(file))\r\n\r\n        dispatch(setFilename(\"Test file.webm\"))\r\n\r\n    }\r\n\r\n    //One pass for pictures, gif is either multi pass or can't find skip frames for gif fps\r\n    const convertToGif = async (file: any, duration: number) => {\r\n        // Write the file to memory\r\n        ffmpeg.FS('writeFile', 'video.mp4', await fetchFile(file));\r\n        // Run the FFMpeg command\r\n        const num_gifs = 4\r\n        const gifs = new Array(num_gifs);\r\n        const pngs = new Array(num_gifs);\r\n        const interval = duration / (num_gifs + 1)\r\n        const fps_str = `fps=1/${interval}`\r\n        await ffmpeg.run('-i', 'video.mp4', '-vf', fps_str, '%d.png')\r\n        //0\r\n\r\n        //10.8\r\n        pngs[0] = ffmpeg.FS('readFile', '1.png')\r\n        //21.6\r\n        pngs[1] = ffmpeg.FS('readFile', '2.png')\r\n        //32.4\r\n        pngs[2] = ffmpeg.FS('readFile', '3.png')\r\n        //44\r\n        pngs[3] = ffmpeg.FS('readFile', '4.png')\r\n        //56\r\n\r\n        // //4.5s - 5.5s\r\n        for (let i = 0; i < num_gifs; i++) {\r\n            const midpoint = duration / (num_gifs + 1) * (i + 1)\r\n            const start_int = Math.max(0, midpoint - 0.5);\r\n            const end_int = Math.min(duration, midpoint + 0.5)\r\n            const start_str = start_int.toString()\r\n            const gif_name = `${i}.gif`\r\n            if (start_int + 1 < duration)\r\n                await ffmpeg.run('-i', 'video.mp4', '-t', '1', '-ss', start_str, '-f', 'gif', gif_name)\r\n            else\r\n                await ffmpeg.run('-i', 'video.mp4', '-t', (duration - end_int).toString(), '-ss', start_str, '-f', 'gif', gif_name)\r\n            gifs[i] = ffmpeg.FS('readFile', gif_name)\r\n        }\r\n        // TODO: Combine binary data.\r\n        // Create a URL\r\n        const gif_0 = URL.createObjectURL(new Blob([gifs[0].buffer], {type: 'image/gif'}));\r\n        const gif_1 = URL.createObjectURL(new Blob([gifs[1].buffer], {type: 'image/gif'}));\r\n        const gif_2 = URL.createObjectURL(new Blob([gifs[2].buffer], {type: 'image/gif'}));\r\n        const gif_3 = URL.createObjectURL(new Blob([gifs[3].buffer], {type: 'image/gif'}));\r\n        const png_0 = URL.createObjectURL(new Blob([pngs[0].buffer], {type: 'image/png'}));\r\n        const png_1 = URL.createObjectURL(new Blob([pngs[1].buffer], {type: 'image/png'}));\r\n        const png_2 = URL.createObjectURL(new Blob([pngs[2].buffer], {type: 'image/png'}));\r\n        const png_3 = URL.createObjectURL(new Blob([pngs[3].buffer], {type: 'image/png'}));\r\n\r\n        // dispatch(setThumbnailGifs([gif_0, gif_1, gif_2, gif_3]))\r\n        dispatch(setThumbnailGifs([gif_0, gif_1, gif_2, gif_3]))\r\n        dispatch(setThumbnailPngs([png_0, png_1, png_2, png_3]))\r\n        dispatch(setStatus(\"idle\"))\r\n    }\r\n\r\n    function postRequest() {\r\n        dispatch(postVideo({\r\n            state: state,\r\n            token: token,\r\n            history: history,\r\n            dispatch: dispatch\r\n        }))\r\n\r\n    }\r\n\r\n    let videoUploadDiv = <div id={\"preview--header\"}>\r\n        <div>Preview</div>\r\n        <div>\r\n            <button onClick={() => {dispatch(setGifsVisibility('1'))}} >Show</button>\r\n            <button onClick={() => {dispatch(setGifsVisibility('0'))}} >Hide</button>\r\n        </div>\r\n        <input type={\"file\"} accept={\"video/*\"} onChange={handleFile}/>\r\n    </div>\r\n    if (video === \"\") {\r\n        videoUploadDiv = (\r\n            <div>\r\n                <label>\r\n                    Video\r\n                    <div id={\"videoprev\"} style={{textAlign: \"end\"}}>\r\n                        {fileName}\r\n                        <input style={{color: \"black\"}} accept={\"video/*\"} type={\"file\"} onChange={handleFile}/>\r\n                    </div>\r\n                </label><br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onClickThumbnail(target: EventTarget, idx: string) {\r\n        dispatch(setThumbnailPngsIndex(idx));\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            postRequest()\r\n        }}>\r\n            <div id={\"form-container\"}>\r\n                <div id=\"side-spacer-left\">\r\n                </div>\r\n                <div id={\"inputs\"} className={\"inputs\"}>\r\n                    <label id={\"title\"}>\r\n                        Title<br/>\r\n                        <textarea value={title} onChange={(e) => {\r\n                            e.preventDefault();\r\n                            dispatch(setTitle(e.target.value))\r\n                        }}/>\r\n                    </label><br/>\r\n                    <br/>\r\n\r\n                    <label>\r\n                        Description<br/>\r\n                        <textarea value={description} onChange={(e) => {\r\n                            e.preventDefault();\r\n                            dispatch(setDescription(e.target.value))\r\n                        }} style={{height: \"120px\"}}/><br/>\r\n                    </label><br/>\r\n\r\n                    <label id={\"thumbnail\"}>\r\n                        Thumbnail<br/>\r\n                        <div id=\"thumbnail-box-area\">\r\n                            <div className={\"thumbnail-section\"}>\r\n                                <img src={thumbnailPngs[0]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailPngsIndex('0'))} style={{opacity: thumbnailPngsIndex === '0' ? '1' : '0.25'}}/>\r\n                                <img src={thumbnailPngs[1]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailPngsIndex('1'))} style={{opacity: thumbnailPngsIndex === '1' ? '1' : '0.25'}}/>\r\n                                <img src={thumbnailPngs[2]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailPngsIndex('2'))} style={{opacity: thumbnailPngsIndex === '2' ? '1' : '0.25'}}/>\r\n                                <img src={thumbnailPngs[3]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailPngsIndex('3'))} style={{opacity: thumbnailPngsIndex === '3' ? '1' : '0.25'}}/>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n\r\n                    <br/>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <button>Upload</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"video-right\">\r\n                    {/*correct*/}\r\n                    <div id={\"video-right--dialog\"}\r\n                         style={{display: status === \"uploading\" ? \"block\" : \"none\", opacity: \"uploading\" ? '1' : '0'}}>\r\n                    {/*testing*/}\r\n                    {/*<div id={\"video-right--dialog\"}*/}\r\n                    {/*     style={{display: status === \"idle\" ? \"block\" : \"none\", opacity: \"idle\" ? 1 : 0}}>*/}\r\n                        <h3 style={{paddingTop: \"15px\"}}>Loading</h3>\r\n                        <hr/>\r\n                        <h5>This may take several seconds.</h5>\r\n                    </div>\r\n                    <div id={\"video-right--content\"} style={{opacity: status === \"idle\" ? '1' : '0'}}>\r\n                        {videoUploadDiv}\r\n                        <div className={\"thumbnail-section\"} style={{opacity: gifsVisibility, pointerEvents: gifsVisibility === '0' ? 'none': 'unset'}}>\r\n                            <img src={thumbnailGifs[0]} className={\"thumbnail-box\"}  onClick={() => dispatch(setThumbnailGifsIndex('0'))} style={{opacity: thumbnailGifsIndex === '0' ? '1' : status === 'idle' ? 0.25 : 0}}/>\r\n                            <img src={thumbnailGifs[1]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailGifsIndex('1'))} style={{opacity: thumbnailGifsIndex === '1' ? '1' : status === 'idle' ? 0.25 : 0}}/>\r\n                            <img src={thumbnailGifs[2]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailGifsIndex('2'))} style={{opacity: thumbnailGifsIndex === '2' ? '1' : status === 'idle' ? 0.25 : 0}}/>\r\n                            <img src={thumbnailGifs[3]} className={\"thumbnail-box\"} onClick={() => dispatch(setThumbnailGifsIndex('3'))} style={{opacity: thumbnailGifsIndex === '3' ? '1' : status === 'idle' ? 0.25 : 0}}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"side-spacer-right\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}","import {useAppDispatch, useAppSelector} from \"../hooks\";\r\nimport {getVideos, getVideosFromApiAsync, setVideos} from \"../Videos/videosSlice\";\r\nimport {Video, VideoDataResponse} from \"../Videos/VideoInterfaces\";\r\nimport {PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setVideo} from \"../OneVideo/oneVideoSlice\";\r\nimport \"./Home.scss\"\r\n\r\nexport function Home() {\r\n    const dispatch = useAppDispatch()\r\n    const allVideos = useAppSelector(getVideos)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(getVideosFromApiAsync())\r\n        //Shows the format for videos\r\n    }, [])\r\n\r\n    function onClickVideo(id: string) {\r\n        history.push(`/watch/${id}`)\r\n    }\r\n\r\n    const rows = allVideos?.map((video) => {\r\n        return (\r\n            <div className={\"video\"} onClick={() => onClickVideo(video._id)}>\r\n                {/*<img src={video.thumbnail}/>*/}\r\n                <img src={video.thumbnailPng}\r\n                     onMouseEnter={(e) => {\r\n                         e.currentTarget.src=video.thumbnailGif\r\n                     }}\r\n                     onMouseLeave={(e) => {\r\n                         e.currentTarget.src=video.thumbnailPng\r\n                     }}/>\r\n                <div>\r\n                    {video.title} <br/>\r\n                    {video.author} <br/>\r\n                    {video.views} views <br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div id={\"home\"}>\r\n            <div id={\"sidebar\"}>\r\n\r\n            </div>\r\n            <div id={\"allvideos\"}>\r\n                {rows}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios, {AxiosResponse} from \"axios\";\r\nimport {VideoDataResponse} from \"./../Videos/VideoInterfaces\";\r\n\r\nexport function getOneVideoFromAPI(id: string){\r\n    return new Promise<AxiosResponse<VideoDataResponse>>((resolve) => {\r\n        axios.get(`/api/video/one/${id}`).then((data:AxiosResponse<VideoDataResponse>) =>{\r\n            resolve(data)\r\n        })\r\n    })\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {RootState, AppThunk} from '../../app/store';\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport {VideoDataResponse} from \"./../Videos/VideoInterfaces\";\r\nimport {Video} from \"./../Videos/VideoInterfaces\";\r\nimport {getOneVideoFromAPI} from \"./oneVideoApi\";\r\n\r\n//Even though it's one video we use an array in order to initialize it instead of an empty dictionary\r\n//and to reuse the video data response interface from the API\r\nexport interface OneVideoState {\r\n    status: string,\r\n    video: Video[]\r\n}\r\n\r\nconst initialState: OneVideoState = {\r\n    status: \"\",\r\n    video: []\r\n};\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const getOneVideoFromApiAsync = createAsyncThunk(\r\n    'oneVideo/getOneVideoFromApi',\r\n    async (id:string) => {\r\n        const response = await getOneVideoFromAPI(id);\r\n        // // The value we return becomes the `fulfilled` action payload\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport const oneVideoSlice = createSlice({\r\n    name: 'upload',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n        setVideo: (state, video: PayloadAction<Video>) => {\r\n            state.video[0] = video.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getOneVideoFromApiAsync.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getOneVideoFromApiAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.video = action.payload.videos;\r\n            })\r\n    },\r\n\r\n    // author: \"\",\r\n    // description: \"\",\r\n    // thumbnail: \"\",\r\n    // status: 'idle',\r\n    // title: \"\",\r\n    // url: \"\",\r\n    // video: \"\"\r\n    // getVideosReq: (state) => {\r\n    //     axios.get(\"/api/video/all\").then((data:AxiosResponse<VideoDataResponse>) => {\r\n    //         state.videos = data.data.videos\r\n    //         console.log(data)\r\n    //     })\r\n    // }\r\n})\r\n// author: \"\",\r\n//     description: \"\",\r\n//     thumbnail: \"\",\r\n//     status: 'idle',\r\n//     title: \"\",\r\n//     url: \"\",\r\n//     video: \"\"\r\nexport const {\r\n    setVideo\r\n} = oneVideoSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const getVideo = (state: RootState) => state.oneVideo.video;\r\n\r\n\r\nexport default oneVideoSlice.reducer;\r\n","import {useEffect} from \"react\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {getOneVideoFromApiAsync, getVideo} from \"./oneVideoSlice\";\r\nimport {getOneVideoFromAPI} from \"./oneVideoApi\";\r\nimport \"./OneVideo.scss\"\r\n\r\ninterface idParams {\r\n    id: string;\r\n}\r\n\r\nexport function OneVideo() {\r\n    const dispatch = useAppDispatch()\r\n    const history = useHistory()\r\n    const oneVideo = useAppSelector(getVideo)\r\n    const params: idParams = useParams()\r\n    useEffect(() => {\r\n        //TODO: (SEVERE) [\"data:\"] Video object in initial state (dont use async thunk especially when redirecting)\r\n        // @ts-ignore\r\n        // if (oneVideo.length === 0 || (typeof oneVideo[0] === \"string\" && oneVideo[0].startsWith(\"data:\"))){\r\n        //     dispatch(getOneVideoFromApiAsync(params.id))\r\n        // }\r\n        dispatch(getOneVideoFromApiAsync(params.id))\r\n    }, [])\r\n    //Severe bug: state :video of type Video. field :video of upload (string) gets pushed into oneVideo (Video).\r\n    //(Don't tell anyone but there is a severe bug on this page). Redux bug\r\n    if (oneVideo.length === 0 || (typeof oneVideo[0] === \"string\")) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div id={\"container\"}>\r\n            <div id={\"onevideocontainer\"}>\r\n                <video id={\"video\"} controls>\r\n                    <source src={oneVideo[0].src} type={\"video/mp4\"}/>\r\n                </video>\r\n                <div id={\"title\"}>{oneVideo[0].title}</div>\r\n                <div id={\"description\"}><span\r\n                    style={{paddingRight: \"25px\"}}>{oneVideo[0].views} views</span>{new Date(oneVideo[0].date).toDateString()}\r\n                </div>\r\n                <div>\r\n                    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n                        {oneVideo[0].likes} likes\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div id={\"sidebar\"}>\r\n                Sidebar...\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Axios from 'axios'\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks\";\r\nimport {\r\n    selectErrors,\r\n    selectUsernameErrors,\r\n    selectPassword,\r\n    selectUsername,\r\n    setPasswordError,\r\n    setUsernameError,\r\n    selectPasswordErrors,\r\n    setUsername,\r\n    setPassword,\r\n    loginFromApiAsync,\r\n    selectLoginState,\r\n    setLoggedIn,\r\n    setToken\r\n} from \"./loginSlice\";\r\nimport {LoginResponse} from \"./LoginInterface\";\r\nimport {PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport function Login() {\r\n    const dispatch = useAppDispatch()\r\n    const loginState = useAppSelector(selectLoginState)\r\n    const username = useAppSelector(selectUsername)\r\n    const password = useAppSelector(selectPassword)\r\n    const errorsUsername = useAppSelector(selectUsernameErrors)\r\n    const errorsPassword = useAppSelector(selectPasswordErrors)\r\n    const minUserLen = 4\r\n    const minPassLen = 4\r\n    const history = useHistory()\r\n\r\n    function handleChange(inputName: string, newStr: string) {\r\n        switch (inputName) {\r\n            case \"username\":\r\n                if (newStr.length < minUserLen) {\r\n                    dispatch(setUsernameError(`Username must be at least ${minUserLen} characters long!`))\r\n                } else {\r\n                    dispatch(setUsernameError(\"\"))\r\n                }\r\n                break\r\n            case \"password\":\r\n                if (newStr.length < minPassLen) {\r\n                    dispatch(setPasswordError(`Password must be at least ${minPassLen} characters long!`))\r\n                } else {\r\n                    dispatch(setPasswordError(\"\"))\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    function handleSubmit() {\r\n        if (username.length < minUserLen || password.length < minPassLen) return;\r\n        dispatch(loginFromApiAsync(loginState)).then((res:PayloadAction<LoginResponse | any>) => {\r\n            if (res.payload.status === \"successful\"){\r\n                //jwt here\r\n                localStorage.setItem(\"username\", res.payload.username)\r\n                localStorage.setItem(\"token\", res.payload.token)\r\n                localStorage.setItem(\"expiresAt\", Date.now() + res.payload.expiresIn)\r\n                //TODO: (SEVERE) HTTP COOKIE\r\n                document.cookie = res.payload.token\r\n                dispatch(setLoggedIn(true))\r\n                dispatch(setToken(res.payload.token))\r\n                history.push(\"/\")\r\n            }\r\n            else if (res.payload.status === \"wrong_password\"){\r\n                dispatch(setPasswordError(\"Incorrect Password!\"))\r\n            }\r\n            else {\r\n                dispatch(setUsernameError(\"Incorrect Login Details!\"))\r\n                dispatch(setPasswordError(\"Incorrect Login Details!\"))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n            }}>\r\n                <label>\r\n                    Username:<br/>\r\n                    <input type={\"text\"} name={\"username\"} value={username} onChange={(e) => {\r\n                        dispatch(setUsername(e.target.value));\r\n                        handleChange(\"username\", e.target.value);\r\n                    }}/><br/>\r\n                    {errorsUsername}\r\n                </label><br/>\r\n                <label>\r\n                    Password:<br/>\r\n                    <input type={\"password\"} name={\"password\"} value={password}\r\n                           onChange={(e) => {\r\n                               dispatch(setPassword(e.target.value));\r\n                               handleChange(\"password\", e.target.value);\r\n                           }}/><br/>\r\n                    {errorsPassword}\r\n                </label><br/>\r\n                <br/>\r\n                <input type={\"submit\"} value={\"Login\"}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport {Counter} from './features/counter/Counter';\nimport './App.scss';\nimport {SearchBar} from \"./app/SearchBar/SearchBar\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {SearchResults} from \"./app/SearchResults/SearchResults\";\nimport {Upload} from \"./app/Upload/Upload\";\nimport {Home} from \"./app/Home/Home\";\nimport {OneVideo} from \"./app/OneVideo/OneVideo\";\nimport {Login} from \"./app/LoginReg/Login/LoginReg\";\nimport {selectLoggedIn} from \"./app/LoginReg/Login/loginSlice\";\nimport {useAppSelector} from \"./app/hooks\";\n\nimport \"./fonts.scss\";\n\nfunction App() {\n\n    return (\n        <div id={\"App\"}>\n            <Router>\n                <div id={\"header\"}>\n                    <Link style={{display: \"inline-block\"}} to={\"/\"}><p\n                        id={\"logo\"}>GroupShare</p></Link>\n                    <div style={{textAlign: \"center\", paddingTop: \"7px\"}}>\n                        <SearchBar/>\n                    </div>\n                    <div style={{paddingTop: \"5px\"}}>\n                        <Link style={{display: \"inline-block\", padding: \"0 15px 0 15px\"}}\n                              to={\"/login\"}>{useAppSelector(selectLoggedIn) ? \"Switch User\" : \"Login\"}</Link>\n                        <Link style={{display: \"inline-block\", padding: \"0 15px 0 15px\"}}\n                              to={\"/upload\"}>Upload</Link>\n                    </div>\n                </div>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Home/>\n                    </Route>\n                    <Route exact path={\"/watch/:id\"}>\n                        <OneVideo/>\n                    </Route>\n                    <Route path={\"/results/search_query=:query\"}>\n                        <SearchResults/>\n                    </Route>\n                    <Route path={\"/login\"}>\n                        <Login/>\n                    </Route>\n                    <Route path={\"/upload\"}>\n                        <Upload/>\n                    </Route>\n\n                </Switch>\n            </Router>\n        </div>\n    )\n\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport uploadReducer from \"./Upload/uploadSlice\";\nimport videosReducer from \"./Videos/videosSlice\";\nimport oneVideoReducer from \"./OneVideo/oneVideoSlice\"\nimport loginReducer from \"./LoginReg/Login/loginSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    upload: uploadReducer,\n    videos: videosReducer,\n    oneVideo: oneVideoReducer,\n    login: loginReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}